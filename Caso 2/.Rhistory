DatosCamara <- read.xlsx2("./data/camaras.xlsx",sheetIndex = 1, header = TRUE)
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("xlsx")
library("rJava")
library("xlsxjars")
library("xlsx")
DatosCamara <- read.xlsx2("./data/camaras.xlsx",sheetIndex = 1, header = TRUE)
datosCamara <- read.csv("./data/camaras.csv")
install.packages("XML")
install.packages("https://cran.rstudio.com/bin/windows/contrib/3.4/XML_3.98-1.7.zip")
install.packages("https://cran.rstudio.com/bin/windows/contrib/3.4/XML_3.98-1.7.zip")
library(rJava)
library(XML)
url <- "http://www.w3schools.com/xml/simple.xml"
data <- xmlTreeParse(url,useInternalNodes = TRUE)
install.packages("XML")
install.packages("XML")
library("XML")
library("XML")
url <- "http://www.w3schools.com/xml/simple.xml"
data <- xmlTreeParse(url,useInternalNodes = TRUE)
library("XML")
library(XML)
url <- "http://www.w3schools.com/xml/simple.xml"
data <- xmlTreeParse(url,useInternalNodes = TRUE)
urlArchivo <- "https://data.baltimorecity.gov/api/views/db54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(urlArchivo, desfile = "./data/camaras.csv")
datosCamara <- read.csv("./data/camaras.csv")
head(datosCamara)
if(!file.exists("data")){dir.create("data")}
url<- "https://data.baltimorecity.gov/api/views/dz54-2aru"
download.file(url,destfile = "./data/camaras.xlsx")
fechaDescarga <- date()
url <- "https://data.baltimorecity.gov/api/views/db54-2aru/rows.csv?accessType=DOWNLOAD"
if(!file.exists("data")){dir.create("data")}
download.file(url,destfile = "./data/camaras.xlsx")
url <- "https://data.baltimorecity.gov/api/views/db54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(url,destfile = "./data/camaras.xlsx")
fechaDescarga <- date()
library("rJava")
library("xlsx")
library("xlsxjars")
library("xlsx")
DatosCamara <- read.xlsx2("./data/camaras.xlsx",sheetIndex = 1, header = TRUE)
head(DatosCamara)
install.packages("XML")
library(XML)
install.packages("XML")
install.packages("XML")
library(XML)
url <- "http://www.w3schools.com/xml/simple.xml"
data <- xmlTreeParse(url,useInternalNodes = TRUE)
nodoRaiz <- xmlRoot(data)
xmlName(nodoRaiz)
names(nodoRaiz)
nodoRaiz[[1]]
nodoRaiz[[1]] [[1]]
xmlSApply(nodoRaiz,xmlValue)
xpathSApply(nodoRaiz,"//name",xmlValue)
url <- "http://espn.go.com/nfl/team/stats/_/name/pit/pitsburgh-steelers"
doc <- htmlTreeParse(url, useInternalNodes = TRUE)
marcador <- xpathSApply(doc,"//li[@class='score'",xmlValue)
equipos <- xpathSApply(doc,"//li[@class='team-name'",xmlValue)
install.packages("jsonlite")
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/USUARIOGITHUB/repos")
names(jsonData)
jsonData$name
myjson <- toJSON(iris, pretty = T)
cat(myjson)
iris2 <- fromJSON(myjson)
head(iris2)
mtcars
s <- toJSON(mtcars, pretty = T)
cat(s)
s2 <- fromJSON(s)
head(s2)
install.packages("data.table")
library(data.table)
library(data.table)
DF = data.frame(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DF,3)
DT = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DT,3)
DT[2,]
DT[DT$y == "a",]
DT[c(2,3)]
DT[,c(2,3)]
{
x = 1
y = 2
}
k = {print(10);5}
print(10)
k <- 5
print(k)
DT[,list(mean(x),sum(z))]
DT[,table(y)]
DT1[,w:=z^2]
DT
DF
DF <- cbind(DF,DF$z^2)
names(DF)[4] <- "w"
DT2 <- DT
head(DT)
library(data.table)
set.seed(1)
DT = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
DT2 <- DT
DT <- DT[, y:=2]
install.packages("RMySQL")
library("RMySQL")
ucscDb <- dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
tablas[1:3]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19,"affyU133Plus2")
hg19 <- dbConnect(MySQl(),user="genome",db="hg19",
host="genome-mysql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(),user="genome",db="hg19",
host="genome-mysql.cse.ucsc.edu")
tablas <- dbListTables(hg19)
length(tablas)
ucscDb <- dbConnect(MySQL(),user="genome",
host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
hg19 <- dbConnect(MySQL(),user="genome",db="hg19",
host="genome-mysql.cse.ucsc.edu")
tablas <- dbListTables(hg19)
length(tablas)
tablas[1:3]
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19,"affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19,"select * from affyU133Plus2
between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
library(datasets)
library(datasets)
data(iris)
?iris
q <- iris[Sepal.Lenght]
q <- iris[iris$Sepal.Lenght]
View(iris)
q1 <- q[iris$Species == "virginica"]
q1 <- q[101:150]
View(q)
q <- iris[iris$Sepal.Lenght:1]
q <- iris[iris$Sepal.Lenght:]
q <- iris[101:150,1]
q <- iris[,1]
q1 <- q[101:150,]
q <- iris[101:150,1]
mean(q)
e <- c(mean(iris$Sepal.Length), mean(iris$Sepal.Width), mean(iris$Petal.Length),mean(iris$Petal.Width))
mean(iris$Sepal.Length)
mean(s)
s22 <- iris[,1]
mean(s22)
library(datasets)
data(mtcars)
fx <- function(x){
tip <- class(x)
print(tip)
}
fx(2)
fx(x)
fx(ccc)
View(mtcars)
ext <- mtcars[,1:2]
View(ext)
ext <- mtcars[mtcars$cyl == 4,1:2]
ext2 <- mtcars[mtcars$cyl == 8, 4]
debug(ls)
?debug
ls
ext2 <- mtcars[mtcars$cyl == 8, 4]
mean(ext2 <- mtcars[mtcars$cyl == 8, 4])
mean(ext2 <- mtcars[mtcars$cyl == 8, 4]) - mean(ext2 <- mtcars[mtcars$cyl == 4, 4])
ls
set.seed(1)
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
set.seed(1)
set.seed(1)
rpois(5,2)
ccc <- rpois(5,2)
?set.seed
ext <- mtcars[mtcars$cyl == 4,1]
fxxx <- function(cyl1){
ext <- mtcars[mtcars$cyl == cyl1,1]
mean1 <- mean(ext)
print(mean1)
}
fxxx(4)
n <- c(1,2,3)
nn <- c("a","b","c")
nnn <- c("#","$","%")
rbind(n,nn,nnn)
cbind(n,nn,nnn)
suma <- 0
for(i in 1:10){
suma <- suma +i
}
print(suma)
suma <- 0
while(i<=10 && i>=1){
suma <- suma + i
}
suma <- 0
while(i in 1:10){
suma <- suma + i
}
while(i == 1:10){
suma <- suma + i
}
suma <- 0
while(suma < 10){
suma <- suma + 1
}
print(suma)
suma <- 0
for(i in 1:10){
suma <- suma +i
}
while(suma < 10){
suma <- suma + 1
}
suma <- 0
for(i in 1:10){
suma <- suma +i
}
print(suma)
suma <- 0
while(suma < 10){
suma <- suma + suma
}
print(suma)
i <- c(1:10)
while(i<=10 && i>=1){
suma <- suma + i
}
while(i<10){
suma <- suma + i
}
i <- c(1:10)
while(i<10){
suma <- suma + i
}
suma1 <- 0
suma <- 0
while(suma<55){
suma1 <- suma1 + 1
suma <- suma + suma1
}
print(suma)
qq <- c(TRUE,FALSE,T,F,3+4i,3L,2.5)
fx <- function(x){
tip <- typeof(x)
print(tip)
}
fx(ccc)
fx(T)
fx("hh")
fx(2.7)
fx(2+5i)
fx()
fx( )
fx <- function(x){
tip <- typeof(val(x))
print(tip)
fx( )
fx(333)
fx <- function(x){
tip <- typeof(x)
print(tip)
}
fx(333)
fx(333)
suma1 <- 0
suma <- c(1:10)
while(suma<sum(suma)){
suma1 <- suma1 + 1
suma <- suma + suma1
}
sum(suma)
fx1 <- function(x){
if(x == is.na(x)){
print("es un valor fatante")
} else if(x<0) {
print("es negativo")
} else if(x>0){
print("es positivo")
} else if(x=0){
print("es cero")
} else{
print("no es numerico")
}
}
fx1 <- function(x){
if(x == is.na(x)){
print("es un valor fatante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else{
print("no es numerico")
}
}
fx1(44)
fx1(nn)
is.na(2)
fx1 <- function(x){
if(is.na(x) = F){
print("es un valor faltante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else{
print("no es numerico")
}
}
fx1(nn)
typeof(nn)
fx1 <- function(x){
if(is.na(x) = F){
print("es un valor faltante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else if(typeof(x)=character){
print("no es numerico")
}
}
fx1 <- function(x){
if(is.na(x) = F){
print("es un valor faltante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else if(typeof(x) = "character"){
print("no es numerico")
}
}
fx1 <- function(x){
if(is.na(x) = F){
print("es un valor faltante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else if(typeof(x) = "character"){
print("no es numerico")
}
}
fx1 <- function(x){
if(is.na(x) = F){
print("es un valor faltante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else if(typeof(x)=character){
print("no es numerico")
} else{}
}
fx1 <- function(x){
if(is.na(x) = F){
print("es un valor faltante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else{
print("no es numerico")
}
}
fx1 <- function(x){
if(is.na(x) = F){
print("es un valor faltante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else{
print("no es numerico")
}
}
fx1 <- function(x){
if(is.na(x) = T){
print("es un valor faltante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else{
print("no es numerico")
}
}
suma1 <- 0
suma <- 0
while(suma1<10){
suma1 <- suma1 + 1
suma <- suma + suma1
}
print(suma)
fx2 <- function(x){
if(x == is.na(x)){
print("es un valor fatante")
} else if(x<0) {
print("es negativo")
} else if(x>0){
print("es positivo")
} else if(x=0){
print("es cero")
} else{
print("no es numerico")
}
}
fx1 <- function(x){
if(is.na(x) = T){
print("es un valor faltante")
} else if(x < 0) {
print("es negativo")
} else if(x > 0){
print("es positivo")
} else if(x == 0){
print("es cero")
} else{
print("no es numerico")
}
}
n <- c(1,2,3)
nn <- c("a","b","c")
nnn <- c("#","$","%")
cbind(n,nn,nnn)
rbind(n,nn,nnn)
getwd()
getwd()
setwd("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Caso 2")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
View(outcome)
head(outcome)
ncol(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
mejor <- function(estado,resultado){
setwd("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Caso 2")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
lugar <-  as.character(outcome$State)
if(!(estado %in% lugar)){
stop("Estado inexistente")
}
mejor <- function(estado,resultado){
setwd("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Caso 2")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
lugar <-  as.character(outcome$State)
if(!(estado %in% lugar)){
stop("Estado inexistente")
}
}
