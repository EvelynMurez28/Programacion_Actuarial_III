for (i in -100:100){
y <- (f^2) + 5
}
plot(y, type = "l")
y <- x^2 + 5
x <- (-30:30)/10
y <- x^2 + 5
plot(y, type = "l")
f <- c(-30:30)
for (i in -30:30){
y <- (f^2) + 5
}
plot(y, type = "l")
f <- c(-50:50)
for (i in -50:50){
y <- (f^2) + 5
}
plot(y, type = "l")
for (i in -50:50){
y <- (i^2) + 5
}
plot(y, type = "l")
for (i in 1:50){
if (i <= 25){
next
}
print(i)
}
for (i in 1:50){
if (i <= 25){
next
}
if (i > 40){
break
}
print(i)
}
suma2 <- function(x,y){
x+y
}
suma2(1,5)
suma2(1,5)
dput("suma2", file="suma2.R")
dump("suma2", file="suma2.R")
getwd()
promedioCol <- function(x, quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm = quitarNA)
}
}
promedioCol(1:10)
?vector
?matrix
promedioCol(1:25,5,5)
promedioCol(1:25 , 5 , 5)
promedioCol(1:25, nrow=5 , ncol=5)
promedioCol(matrix(1:25, nrow=5 , ncol=5))
promedio2 <- function(x,
quitarNA
)
?mean
?mean
promedioCol <- function(x, quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for (i in 1:nc){
medias <- c(v,mean(x[,i], na.rm = quitarNA))
}
medias
}
promedioCol(airquality)
promedioCol <- function(x, quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for (i in 1:nc){
medias <- c(medias,mean(x[,i], na.rm = quitarNA))
}
medias
}
promedioCol(airquality)
x <- -300:300)/100
y <- x^2 + 5
plot(x,y, type="l")
x <- (-300:300)/100
y <- x^2 + 5
plot(x,y, type="l")
miplot <- function(x,y,ana="l",...){
plot(x,y,type = ana,...)
}
?plot
miplot(x,y, main = "Parábola")
miplot(x,y, main = "Parábola", sub = "y=x^2+5")
miplot(x,y, main = "Parábola", sub = "y=x^2+5", xlab="Horizontal", ylab="Vertical")
miplot(x,y, main = "Parábola", sub = "y=x^2+5", xlab="Horizontal", ylab="Vertical", col = "blue")
miplot <- function(x,y,harry="l",...){
plot(x,y,type = harry,...)
}
miplot(x,y, main = "Parábola", sub = "y=x^2+5", xlab="Horizontal",
ylab="Vertical", col = "blue")
?paste
lm
lm <- function(x){x*x}
lm
rm(lm)
lm
search()
library(grDevices)
search()
library(ggplot2)
f <- function(x,y){
x^2 + y/z
}
hacer.potencia <- function(n){
potencia <- function(x){
x^n
}
potencia
}
cubica <- hacer.potencia(3)
cuadrada <- hacer.potencia(2)
cubica(3)
cuadrada(3)
n
x <- as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-01"))
unclass(as.Date("1970-01-05"))
x <- as.Date("1994-02-01")
unclass(x)
y <- as.Date("2017-03-21")
unclass(y)
unclass(y-x)
x <- as.Date("1996-02-03")
unclass(x)
y <- as.Date("1996-02-14")
unclass(y)
unclass(y-x)
date()
date()
ct <- as.POSIXct.date(Sys.time())
lt <- as.POSIXlt.date(Sys.time())
weekdays(x)
weekdays(y)
weekdays(x)
x <- as.Date("1994-02-01")
weekdays(x)
lapply
?lapply
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10), c=rnorm(10,1),d=rnorm(10,2))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10), c=rnorm(10,1),d=rnorm(10,2))
lapply(x, mean)
x <- 1:4
lapply(x, runif)
x <- 1:4
lapply(x, runif, max=15, min=5)
x <- list(a=1:5, b=rnorm(10)) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- matrix(rnorm(200), 20, 10)
apply(x,2,mean)
apply(x,1,sum)
x <- matrix(rnorm(200),20,10)
apply(x,1,quantile,probs=c(0.25,0.75))
a <- array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2), mean)
rowMeans(a,dims=2)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages(swirl)
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages(swirl)
install.packages("swirl")
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages(ggplot)
install.packages("ggplot2")
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
library(ggplot2)
install.packages("devtools")
list(rep(1,4) , rep(2,3) , rep(3,2) , rep(4,1))
mapply(rep,1:4,4:1)
mapply(rep,1:5,4:1)
noise <- function(n,mean,sd){
rnorm(n,mean,sd)
}
noise(5,1,2)
noise(5,1,2)
mapply(noise,1:5,1:5,2)
?tapply
x <- c(rnorm(10),runif(10),rnorm(10,1))
f <- gl(3,10)
f
tapply(x,f,mean)
tapply(x,f,mean,simplify = F)
split(x,f)
lapply(split(x,f),mean)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(datasets)
airquality
lapply(split(x,f),mean)
split(x,f)
tapply(x,f,mean,simplify = F)
tapply(x,f,mean)
y <- c(airquality)
tapply(y,5,mean)
tapply(y,f=5,mean)
tapply(y,f,mean)
tapply(airquality,5,mean)
y <- airquality
y
x <- c(1,2,NA,10,3,NaN)
is.na(x)
is.nan(x)
x <- data.frame(foo=1:4, bar=c(T,T,F,T))
nrow(x)
ncol(x)
x <- 1:3
names(x)
names(x) <- c("Harry", "Hazza", "Styles")
x
x <- data.frame(foo=1:4, bar=c(T,T,F,T))
x
y <- data.frame(airquality)
y
?data.frame
x <- data.frame(a=1,b="a")
dput(x)
dput(x,"x.R")
dget("x.R")
e <- c("a","b","c","d","e","a")
e
e[4]
y[1:153, NROW=2,NCOL=5]
y[1:153]
airquality
tapply(airquality$Temp,airquality$Month, mean,T)
tapply(airquality$Temp,airquality$Month, mean,simplify=T)
sapply(split(airquality$Temp,airquality$Month), mean)
split(airquality$Temp,airquality$Month)
split(airquality$Temp,airquality$Month, simplify=T)
split(airquality$Temp,airquality$Month, simplify=TRUE)
split(airquality$Temp,airquality$Month,mean)
s <- split(airquality,airquality$Month)
lapply(s, function(x) colMeans[,1:3]))
lapply(s, function(x) colMeans(x[,1:3]))
split(airquality$Temp,airquality$Day)
lapply(s, function(x) colMeans(x[,1:3], na.rm = TRUE))
sapply(s, function(x) colMeans(x[,1:4], na.rm = TRUE))
x <- rnorm(10)
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
x
str(split(x,list(f1,f2)))
split(x,list(f1,f2))
?spit
?split
split(x,list(f1,f2))
str(split(x,list(f1,f2)))
?str
str(split(x,list(f1,f2)))
x <- rnorm(10)
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
x
str(split(x,list(f1,f2)))
?options
options(error = recover)
read.csv("noexiste")
mediacontaminante <- function(directorio, contaminante ,id=1:332){
y <- 0
z <- c()
setwd(directorio)
if (contaminante == "sulfate"){
y = 1
}  else if (contaminante == "nitrate"){
y = 2
}
for (i in id){
i = abs(i)
if (i<10){
i = read.csv(paste("00" , i , ".csv" , sep = ""),header = T)
}
else if (i<100){
i = read.csv(paste("0" , i , ".csv" , sep = ""),header = T)
}
else{
i = read.csv(paste(i , ".csv",sep=""),header = T)
}
abrir2 <- i[,2:3]
z <- c(z,abrir2[,y])
}
media <- mean(z,na.rm = T)
media
}
mediacontaminante("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata","nitrate",70:72)
mediacontaminante(directorio,"sulfate",70:72)
mediacontaminante(,"sulfate",70:72)
mediacontaminante <- function(directorio, contaminante ,id=1:332){
y <- 0
z <- c()
setwd("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata")
if (contaminante == "sulfate"){
y = 1
}  else if (contaminante == "nitrate"){
y = 2
}
for (i in id){
i = abs(i)
if (i<10){
i = read.csv(paste("00" , i , ".csv" , sep = ""),header = T)
}
else if (i<100){
i = read.csv(paste("0" , i , ".csv" , sep = ""),header = T)
}
else{
i = read.csv(paste(i , ".csv",sep=""),header = T)
}
abrir2 <- i[,2:3]
z <- c(z,abrir2[,y])
}
media <- mean(z,na.rm = T)
media
}
mediacontaminante(,"nitrate",70:72)
mediacontaminante(,"sulfate",70:72)
mediacontaminante("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata","nitrate",70:72)
mediacontaminante <- function(directorio, contaminante ,id=1:332){
y <- 0
z <- c()
setwd(directorio)
if (contaminante == "sulfate"){
y = 1
}  else if (contaminante == "nitrate"){
y = 2
}
for (i in id){
i = abs(i)
if (i<10){
i = read.csv(paste("00" , i , ".csv" , sep = ""),header = T)
}
else if (i<100){
i = read.csv(paste("0" , i , ".csv" , sep = ""),header = T)
}
else{
i = read.csv(paste(i , ".csv",sep=""),header = T)
}
abrir2 <- i[,2:3]
z <- c(z,abrir2[,y])
}
media <- mean(z,na.rm = T)
media
}
mediacontaminante("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata","nitrate",70:72)
mediacontaminante(,"sulfate",70:72)
mediacontaminante("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata","sulfate",70:72)
mediacontaminante("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata","nitrate",25:36)
mediacontaminante("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata","sulfate",33:50)
mediacontaminante("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata","sulfate",22:12)
e <- c()
completos <- function(directorio,id=1:332){
setwd("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata")
e <- vector("numeric")
for (i in id){
i = abs(i)
if (i<10){
i = read.csv(paste("00",i, ".csv",sep=""),header = T)
}else if (i<100){
i = read.csv(paste("0",i, ".csv",sep=""), header = T)
}else{
i = read.csv(paste(i,".csv",sep=""), header = T)
}
c <- complete.cases(i)
abre2 <- i[c,2:3]
d <- nrow(abre2)
e <- c(e,d)
}
datf <- data.frame(Id = id, nobs = e)
datf
}
completos(,3)
completos(,2)
completos(,2 4)
completos(,4)
completos(,(2,4))
completos(,4)
e <- c()
corr <- function(directorio,horizonte=0){
setwd("C:/Users/User/Documents/GitHub/Programacion_Actuarial_III/Specdata/specdata")
e <- vector("numeric")
for (i in 1:332){
i = abs(i)
if (i<10){
i = read.csv(paste("00",i, ".csv",sep=""), header = T)
}else if (i<100){
i = read.csv(paste("0",i, ".csv",sep=""), header = T)
}else{
i = read.csv(paste(i,".csv",sep=""), header = T)
}
c <- complete.cases(i)
abre2 <- i[c,]
d <- nrow(abre2)
if (d>horizonte){
crr <- cor(abre2[2],abre2[3])
e <- c(e,crr)
}
}
e
}
head(corr(directorio,400))
head(corr(directorio,5000))
