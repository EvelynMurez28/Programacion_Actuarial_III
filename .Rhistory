}else{
z <- z-1
}
contador <- contador + 1
}
print(x)
print(contador)
z <- 5
contador <- 1
x <- c()
while ((z >= 3 && z <= 10) && contador < 100){
x <- c(x , z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z+1
}else{
z <- z-1
}
contador <- contador + 1
}
print(x)
print(contador)
z <- 5
contador <- 1
x <- c()
while ((z >= 3 && z <= 10) && contador < 100){
x <- c(x , z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z+1
}else{
z <- z-1
}
contador <- contador + 1
}
print(x)
print(contador)
z <- 5
contador <- 1
x <- c()
y <- c()
while ((z >= 3 && z <= 10) && contador = 100){
x <- c(x , z)
y <- c(y,length(x))
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z+1
}else{
z <- z-1
}
contador <- contador + 1
}
x
y
print(contador)
z <- 5
contador <- 1
x <- c()
y <- c()
while ((z >= 3 && z <= 10) && contador = 100){
x <- c(x , z)
y <- c(y,length(x))
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z+1
} else{
z <- z-1
}
contador <- contador + 1
}
x
y
print(contador)
z <- 5
contador <- 1
x <- c()
y <- c()
while ((z >= 3 && z <= 10) && contador = 100){
x <- c(x , z)
y <- c(y , length(x))
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z + 1
} else{
z <- z - 1
}
contador <- contador + 1
}
x
y
print(contador)
set.seed(1)
y <- c()
for (i in 1:100)
z <- 5
contador <- 1
x <- c()
while ((z >= 3 && z <= 10) && contador = 100){
x <- c(x , z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z + 1
} else{
z <- z - 1
}
contador <- contador + 1
y <- c(y , length(x))
}
x
y
print(contador)
set.seed(1)
y <- c()
for (i in 1:100)
z <- 5
contador <- 1
x <- c()
while ((z >= 3 && z <= 10) && contador = 100){
x <- c(x , z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z + 1
} else{
z <- z - 1
}
contador <- contador + 1
y <- c(y , length(x))
}
x
y
print(contador)
set.seed(1)
y <- c()
for (i in 1:100)
z <- 5
contador <- 1
x <- c()
while ((z >= 3 && z <= 10) && contador = 100){
x <- c(x , z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z + 1
} else{
z <- z - 1
}
contador <- contador + 1
y <- c(y , length(x))
}
x
y
print(contador)
set.seed(1)
y <- c()
for (i in 1:100)
z <- 5
contador <- 1
x <- c()
while ((z >= 3 && z <= 10) && contador = 100){
x <- c(x , z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z + 1
} else{
z <- z - 1
}
contador <- contador + 1
}
y <- c(y , length(x))
}
x
y
print(contador)
set.seed(1)
y <- c()
for (i in 1:100){
z <- 5
contador <- 1
x <- c()
while ((z >= 3 && z <= 10) && contador < 100){
x <- c(x , z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z + 1
} else{
z <- z - 1
}
contador <- contador + 1
}
y <- c(y , length(x))
}
hist(y)
set.seed(1)
y <- c()
for (i in 1:100){
z <- 5
contador <- 1
x <- c()
while ((z >= 3 && z <= 10) && contador < 100){
x <- c(x , z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z + 1
} else{
z <- z - 1
}
contador <- contador + 1
}
y <- c(y , length(x))
}
y
hist(y)
?plot
plot(x)
plot(x, type("l"))
plot(x, type="l")
plot(x, type ="l")
x <- c(x , z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){
z <- z + 1
} else{
z <- z - 1
}
contador <- contador + 1
}
y <- c(y , length(x))
}
y
hist(y)
plot(x, type ="l")
f <- c(-Inf,Inf)
plot(f, type = "l")
f <- c(-100,100)
plot(f, type = "l")
f <- c(-100,100)
y <- f^2 + 5
plot(y, type = "l")
f <- c(-100,100)
y <- (f*f) + 5
plot(y, type = "l")
f <- c(-100:100)
for (i in -100:100){
y <- (f^2) + 5
}
plot(y, type = "l")
y <- x^2 + 5
x <- (-30:30)/10
y <- x^2 + 5
plot(y, type = "l")
f <- c(-30:30)
for (i in -30:30){
y <- (f^2) + 5
}
plot(y, type = "l")
f <- c(-50:50)
for (i in -50:50){
y <- (f^2) + 5
}
plot(y, type = "l")
for (i in -50:50){
y <- (i^2) + 5
}
plot(y, type = "l")
for (i in 1:50){
if (i <= 25){
next
}
print(i)
}
for (i in 1:50){
if (i <= 25){
next
}
if (i > 40){
break
}
print(i)
}
suma2 <- function(x,y){
x+y
}
suma2(1,5)
suma2(1,5)
dput("suma2", file="suma2.R")
dump("suma2", file="suma2.R")
getwd()
promedioCol <- function(x, quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for (i in 1:nc){
medias[i] <- mean(x[,i], na.rm = quitarNA)
}
}
promedioCol(1:10)
?vector
?matrix
promedioCol(1:25,5,5)
promedioCol(1:25 , 5 , 5)
promedioCol(1:25, nrow=5 , ncol=5)
promedioCol(matrix(1:25, nrow=5 , ncol=5))
promedio2 <- function(x,
quitarNA
)
?mean
?mean
promedioCol <- function(x, quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for (i in 1:nc){
medias <- c(v,mean(x[,i], na.rm = quitarNA))
}
medias
}
promedioCol(airquality)
promedioCol <- function(x, quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for (i in 1:nc){
medias <- c(medias,mean(x[,i], na.rm = quitarNA))
}
medias
}
promedioCol(airquality)
x <- -300:300)/100
y <- x^2 + 5
plot(x,y, type="l")
x <- (-300:300)/100
y <- x^2 + 5
plot(x,y, type="l")
miplot <- function(x,y,ana="l",...){
plot(x,y,type = ana,...)
}
?plot
miplot(x,y, main = "Parábola")
miplot(x,y, main = "Parábola", sub = "y=x^2+5")
miplot(x,y, main = "Parábola", sub = "y=x^2+5", xlab="Horizontal", ylab="Vertical")
miplot(x,y, main = "Parábola", sub = "y=x^2+5", xlab="Horizontal", ylab="Vertical", col = "blue")
miplot <- function(x,y,harry="l",...){
plot(x,y,type = harry,...)
}
miplot(x,y, main = "Parábola", sub = "y=x^2+5", xlab="Horizontal",
ylab="Vertical", col = "blue")
?paste
lm
lm <- function(x){x*x}
lm
rm(lm)
lm
search()
library(grDevices)
search()
library(ggplot2)
f <- function(x,y){
x^2 + y/z
}
hacer.potencia <- function(n){
potencia <- function(x){
x^n
}
potencia
}
cubica <- hacer.potencia(3)
cuadrada <- hacer.potencia(2)
cubica(3)
cuadrada(3)
n
x <- as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-01"))
unclass(as.Date("1970-01-05"))
x <- as.Date("1994-02-01")
unclass(x)
y <- as.Date("2017-03-21")
unclass(y)
unclass(y-x)
x <- as.Date("1996-02-03")
unclass(x)
y <- as.Date("1996-02-14")
unclass(y)
unclass(y-x)
date()
date()
ct <- as.POSIXct.date(Sys.time())
lt <- as.POSIXlt.date(Sys.time())
weekdays(x)
weekdays(y)
weekdays(x)
x <- as.Date("1994-02-01")
weekdays(x)
lapply
?lapply
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10000))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10), c=rnorm(10,1),d=rnorm(10,2))
lapply(x, mean)
x <- list(a=1:5,b=rnorm(10), c=rnorm(10,1),d=rnorm(10,2))
lapply(x, mean)
x <- 1:4
lapply(x, runif)
x <- 1:4
lapply(x, runif, max=15, min=5)
x <- list(a=1:5, b=rnorm(10)) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- list(a=1:5, b=rnorm(10) , c=rnorm(10,3) , d=rnorm(10,5))
lapply(x, mean)
sapply(x, mean)
x <- matrix(rnorm(200), 20, 10)
apply(x,2,mean)
apply(x,1,sum)
x <- matrix(rnorm(200),20,10)
apply(x,1,quantile,probs=c(0.25,0.75))
a <- array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2), mean)
rowMeans(a,dims=2)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages(swirl)
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages(swirl)
install.packages("swirl")
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages(swirl)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
getwd()
setwd("C:/users/user/Documents/GitHub/Programacion_Actuarial_III")
getwd()
install.packages("swirl")
library(swirl)
swirl()
